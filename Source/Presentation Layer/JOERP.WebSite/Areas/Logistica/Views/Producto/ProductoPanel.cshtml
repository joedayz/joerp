@model JOERP.Business.Entity.Producto
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<div class="msgModel">
    <div class="tips loading">
        Por favor espere, procesando solicitud...
    </div>
    <div class="tips merror">
    </div>
    <div class="tips mexito">
    </div>
</div>
<div class="MhiosysForm">
    @using (Html.BeginForm(ViewData["Accion"].ToString(), "Producto", new { area = "Logistica" }, FormMethod.Post, new { id = "frmModel" }))
    {
        <fieldset class="fieldset-with-legend border-round">
            <legend class="border-shadow">Información del Producto : </legend>
            <table border="0" cellpadding="0" cellspacing="0" class="tablelayout">
                <tr>
                    <td class="right">
                        @Html.LabelFor(model => model.Codigo)
                    </td>
                    <td>
                        @Html.EditorFor(model => model.Codigo)
                        @Html.ValidationMessageFor(model => model.Codigo)
                    </td>
                    <td class="right">
                        @Html.LabelFor(model => model.CodigoAlterno)
                    </td>
                    <td>
                        @Html.EditorFor(model => model.CodigoAlterno)
                        @Html.ValidationMessageFor(model => model.CodigoAlterno)
                    </td>
                    <td class="right">
                        @Html.LabelFor(model => model.Estado)
                    </td>
                    <td>
                        @Html.DropDownListFor(model => model.Estado, new SelectList(Model.Estados, "Id", "Nombre", Model.Estado))
                        @Html.ValidationMessageFor(model => model.Estado)
                    </td>
                </tr>
                <tr>
                    <td class="right">
                        @Html.LabelFor(model => model.Nombre)
                    </td>
                    <td>
                        @Html.EditorFor(model => model.Nombre)
                        @Html.ValidationMessageFor(model => model.Nombre)
                    </td>
                    <td class="right">
                        @Html.LabelFor(model => model.TipoProducto)
                    </td>
                    <td>
                        @Html.DropDownListFor(model => model.TipoProducto, new SelectList(Model.TiposProducto, "Id", "Nombre", Model.TipoProducto))
                        @Html.ValidationMessageFor(model => model.TipoProducto)
                    </td>
                    <td class="right">
                        @Html.LabelFor(model => model.TipoClasificacion)
                    </td>
                    <td>
                        @Html.DropDownListFor(model => model.TipoClasificacion, new SelectList(Model.TiposClasificacion, "Id", "Nombre", Model.TipoClasificacion))
                        @Html.ValidationMessageFor(model => model.TipoClasificacion)
                    </td>
                </tr>
                <tr>
                    <td class="right">
                        @Html.LabelFor(model => model.Descripcion)
                    </td>
                    <td colspan="3">
                        @Html.TextAreaFor(model => model.Descripcion, new { @class = "text-area", @rows = "3" })
                        @Html.ValidationMessageFor(model => model.Descripcion)
                    </td>
                    <td class="right">
                        @Html.LabelFor(model => model.EsAfecto)
                    </td>
                    <td>
                        @Html.CheckBoxFor(model => model.EsAfecto)
                        @Html.ValidationMessageFor(model => model.EsAfecto)
                    </td>
                </tr>
                <tr>
                    <td class="right">
                        @Html.LabelFor(model => model.StockMinimo)
                    </td>
                    <td>
                        @Html.EditorFor(model => model.StockMinimo)
                        @Html.ValidationMessageFor(model => model.StockMinimo)
                    </td>
                    <td class="right">
                        @Html.LabelFor(model => model.StockMaximo)
                    </td>
                    <td>
                        @Html.EditorFor(model => model.StockMaximo)
                        @Html.ValidationMessageFor(model => model.StockMaximo)
                    </td>
                    <td>
                        @Html.LabelFor(model => model.EsExonerado)
                    </td>
                    <td>
                        @Html.CheckBoxFor(model => model.EsExonerado)
                        @Html.ValidationMessageFor(model => model.EsExonerado)
                    </td>
                </tr>
                <tr>
                    <td class="right">
                        @Html.LabelFor(model => model.IdLinea)
                    </td>
                    <td>
                        @Html.DropDownListFor(model => model.IdLinea, new SelectList(Model.Lineas, "IdDatoEstructura", "Nombre", Model.IdLinea))
                        @Html.ValidationMessageFor(model => model.IdLinea)
                    </td>
                    <td class="right">
                        @Html.LabelFor(model => model.IdSubLinea)
                    </td>
                    <td>
                        @Html.DropDownListFor(model => model.IdSubLinea, new List<SelectListItem>())
                        @Html.ValidationMessageFor(model => model.IdSubLinea)
                    </td>
                    <td class="right">
                        @Html.LabelFor(model => model.IdDatoEstructura)
                    </td>
                    <td>
                        @Html.DropDownListFor(model => model.IdDatoEstructura, new List<SelectListItem>())
                        @Html.ValidationMessageFor(model => model.IdDatoEstructura)
                    </td>
                </tr>
                <tr>
                </tr>
                <tr>
                    <td>
                        @Html.HiddenFor(model => model.IdProducto)
                        @Html.HiddenFor(model => model.FechaCreacion)
                        @Html.HiddenFor(model => model.UsuarioCreacion)
                        @Html.HiddenFor(model => model.FechaModificacion)
                        @Html.HiddenFor(model => model.UsuarioModificacion)
                    </td>
                    <td colspan="3">
                        <br />
                        <input type="submit" value="Guardar" id="btnRegistrar" class="buttonConstellation" />
                        <input type="button" value="Regresar" id="btnCancel" onclick="Cancelar()" class="buttonConstellation" />
                        <input type="button" id="btnLimpiarPresentacion" style="display: none;" />
                    </td>
                </tr>
            </table>
            <table>
                <tr>
                    <td>
                        <div id="tabs">
                            <ul>
                                <li><a href="#tabs-1">Presentaciones</a></li>
                                <li><a href="#tabs-2">Almacenes</a></li>
                                <li><a href="#tabs-3">Valorización</a></li>
                            </ul>
                            <div id="tabs-1">
                                <div id="listadoPresentacion" style="padding: 10px; height: 90%; min-height: 400px;">
                                    <table id="tablaPresentacion">
                                    </table>
                                    <div id="barraPresentacion">
                                    </div>
                                </div>
                                <div id="informacionPresentacion" style="padding: 10px; display: none;">
                                </div>
                            </div>
                            <div id="tabs-2">
                                <fieldset>
                                    <legend style="font-size: 9pt;">Almacenes : </legend>
                                    <table cellpadding="10" cellspacing="10">
                                    </table>
                                </fieldset>
                            </div>
                            <div id="tabs-3">
                                <fieldset>
                                    <legend style="font-size: 9pt;">Valorización : </legend>
                                    <table cellpadding="10" cellspacing="10">
                                    </table>
                                </fieldset>
                            </div>
                        </div>
                    </td>
                </tr>
            </table>
        </fieldset>
    }
</div>
<script type="text/javascript">
    var resetFrm = false;

    $(document).ready(function () {

        $("#IdLinea").val('@Model.IdLinea');
        $("#IdLinea").change(function() {
            JOERP.LoadDropDownListItems('IdSubLinea', '@Url.Action("ListarSubLineas", "Producto", new { area = "Logistica" })', { idLinea: $("#IdLinea").val() });
        });
        JOERP.LoadDropDownListItems('IdSubLinea', '@Url.Action("ListarSubLineas", "Producto", new { area = "Logistica" })', { idLinea: $("#IdLinea").val() });

        $("#IdSubLinea").val('@Model.IdSubLinea');
        $("#IdSubLinea").change(function() {
            JOERP.LoadDropDownListItems('IdDatoEstructura', '@Url.Action("ListarCategorias", "Producto", new { area = "Logistica" })', { subLinea: $("#IdSubLinea").val() });
        });
        JOERP.LoadDropDownListItems('IdDatoEstructura', '@Url.Action("ListarCategorias", "Producto", new { area = "Logistica" })', { subLinea: $("#IdSubLinea").val(), idDatoEstructura: '@Model.IdDatoEstructura' });
        $("#IdDatoEstructura").val('@Model.IdDatoEstructura');

        $("#tabs").tabs();
        ListarPresentaciones();
        CrearDialogs();

        $(".msgModel .tips").hide();
        $(".msgModel .merror, .msgModel .mexito, .msgModel .loading").css({ "border-top": "none" });
        $("#frmModel .merror").css({ "border-top": "none", "border-left": "none", "border-right": "none" });

        $('#btnRegistrar').bind("click", function (e) {

            if (resetFrm)
                $(".msgModel .tips").hide();

            if ($("#frmModel").validate().form()) {
                InicializarMsg();
                $.post($("#frmModel").attr("action"), $("#frmModel").serialize(), function (response) {
                    if (response.Success) {
                        $(".msgModel .loading").slideUp(200, function () {
                            $(".msgModel .mexito").html(response.Message);
                            JOERP.ShowElement(".msgModel .mexito");
                            resetFrm = true;
                            $('#btnRegistrar').hide();
                        });
                    } else {
                        $(".msgModel .loading").slideUp(200, function () {
                            $(".msgModel .merror").html(response.Message);
                            JOERP.ShowElement(".msgModel .merror");
                        });
                        resetFrm = true;
                    }
                });
            }
            e.preventDefault();
        });

        $('#btnLimpiarPresentacion').bind("click", function (e) {

            $('#informacionPresentacion').html('');
            e.preventDefault();
        });
        
        $('.ui-pg-input').css('width', '50px');
        $('.ui-pg-selbox').css('width', '50px');
        $('#dialog-alert').dialog("close");
    });

    function InicializarMsg() {

        if ($(".msgModel .merror").is(":visible")) {
            $(".msgModel .merror").slideUp(200, function () {
                JOERP.ShowElement(".msgModel .loading");
            });
        }
        else
            JOERP.ShowElement(".msgModel .loading");
    }

    function Cancelar() {

        var sgrid = $("#tabla")[0];
        sgrid.clearToolbar();
        $('#tabla').trigger('reloadGrid');
        $('#listado').show();
        $('#informacion').hide();
    }

    function ListarPresentaciones() {

        var grilla = 'tablaPresentacion';
        var colNames = ['ID', 'Presentacion', 'Peso', 'Equivalencia', 'Es Base'];
        var colModels = [
                { name: 'IdPresentacion', index: 'IdPresentacion', align: 'center', hidden: true, width: 40},
                { name: 'Nombre', index: 'Nombre', align: 'center' },
                { name: 'Peso', index: 'Peso', align: 'center' },
                { name: 'Equivalencia', index: 'Equivalencia', align: 'center'},
                { name: 'EsBase', index: 'EsBase', align: 'center', stype: 'select'}
        ];

        var opciones = { nuevo: true, editar: true, eliminar: false, search: true, rules:true};

        JOERP.GrillaCompleta(grilla, 'barraPresentacion', 'hfIdentificador', 'auto', 1000, 'Presentaciones de Producto', '@Url.Action("ListarPresentaciones", "Producto", new { area = "Logistica" })?productoID=' + @Model.IdProducto, 'id', colNames, colModels, 'IdPresentacion', opciones,NuevoPresentacion,EditarPresentacion);

        $("#" + grilla).filterToolbar({ searchOnEnter: true, stringResult: true, defaultSearch: "cn" });
    }

     function GetRules() {

        var valor = @Model.IdProducto;
        var rules = [{ field: 'ProductoId', data: valor}];
        return rules;
    }
    
    function CrearDialogs() {
        var arrayDialog = [{ name: "dialog-alert", height: 100, width: 280, title: "Alerta"}];
        JOERP.CreateDialogs(arrayDialog);
    }

    function NuevoPresentacion() {
        var url = '@Url.Action("CrearPresentacion", "Producto", new { area = "Logistica" })?idProducto=' + @Model.IdProducto ;
        JOERP.Operacion2(url, 'listadoPresentacion', 'informacionPresentacion');
    }

    function EditarPresentacion(rowkey) {
        var url = '@Url.Action("ModificarPresentacion", "Producto", new { area = "Logistica" })' + '/' + rowkey;
        JOERP.Operacion2(url, 'listadoPresentacion', 'informacionPresentacion');
    }

</script>
